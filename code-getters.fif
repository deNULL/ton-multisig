// automatically generated from `../src/crypto/smartcont/stdlib.fc` `code.fc` `getters.fc` 
PROGRAM{
  DECLPROC recv_internal
  DECLPROC recv_external
  85143 DECLMETHOD seqno
  126687 DECLMETHOD pending_count
  107113 DECLMETHOD param_n
  127692 DECLMETHOD param_k
  84885 DECLMETHOD owners
  126129 DECLMETHOD pending
  75417 DECLMETHOD pending_signed_by
  recv_internal PROC:<{
    DROP
  }>
  recv_external PROC:<{
    9 PUSHPOW2
    LDSLICEX
    DUP
    32 LDU
    32 LDU
    NOW
    s1 s2 XCHG
    LESS
    35 THROWIF
    256 LDU
    c4 PUSH
    CTOS
    32 LDU
    16 LDU
    8 LDU
    8 LDU
    s7 s4 XCPU
    EQUAL
    33 THROWIFNOT
    s0 s7 XCHG
    HASHSU
    s0 s8 s5 XC2PU
    CHKSIGNU
    34 THROWIFNOT
    s0 s4 XCHG
    LDDICT
    LDDICT
    ENDS
    s4 s1 XCPU
    8 PUSHPOW2
    DICTUGET
    NULLSWAPIFNOT
    36 THROWIFNOT
    ACCEPT
    s4 PUSH
    ISNULL
    IFNOT:<{
      -1 PUSHINT
      UNTIL:<{
        s5 PUSH
        8 PUSHPOW2
        DICTUGETNEXT
        NULLSWAPIFNOT
        NULLSWAPIFNOT
        DUP
        IF:<{
          s0 s2 XCHG
          32 LDU
          NIP
          32 LDU
          DROP
          NOW
          LESS
          IF:<{
            8 PUSHPOW2
            s1 s7 s7 PUXC2
            DICTUDEL
            DROP
            s0 s7 XCHG
            DEC
          }>ELSE<{
            s6 s7 XCHG
            s0 s6 XCHG
          }>
        }>ELSE<{
          s7 s8 XCHG
          s7 s2 XCHG2
          DROP
        }>
        SWAP
        NOT
        s1 s7 XCHG
        s1 s6 XCHG
      }>
      DROP
    }>
    WHILE:<{
      s3 PUSH
      SREFS
    }>DO<{
      s0 s3 XCHG
      1 LDU
      LDREF
      LDDICT
      s3 PUSH
      IF:<{
        s2 PUSH
        CTOS
        256 LDU
        DROP
      }>ELSE<{
        s2 PUSH
        HASHCU
      }>
      s0 s8 PUSH2
      8 PUSHPOW2
      DICTUGET
      NULLSWAPIFNOT
      DUP
      IFNOT:<{
        NIP
        s0 s5 XCHG
        37 THROWIF
        s0 s3 XCHG
        CTOS
      }>ELSE<{
        s1 s5 s6 XCHG3
        2DROP
      }>
      32 LDU
      32 LDU
      8 LDU
      LDREF
      0 PUSHINT
      s0 s9 PUXC
      IF:<{
        DROP
        s8 POP
        s0 s7 XCHG
        8 LDU
        s15 PUSH
        LDUX
        DROP
      }>ELSE<{
        NIP
        s3 PUSH
        NOW
        LESS
        38 THROWIF
        s4 s10 PUSH2
        EQUAL
        39 THROWIFNOT
        s0 s13 XCHG
        INC
        s8 s13 XCHG2
        SWAP
      }>
      256 PUSHPOW2DEC
      UNTIL:<{
        s0 s12 XCHG
        8 LDU
        SWAP
        POW2
        s2 s0 PUSH2
        AND
        IFNOT:<{
          s0 s3 XCHG
          INC
          s2 s3 XCHG2
          OR
        }>ELSE<{
          s1 s2 XCHG
          DROP
        }>
        s12 s7 XCPU
        8 PUSHPOW2
        DICTUGETPREV
        NULLSWAPIFNOT
        NULLSWAPIFNOT
        DUP
        IF:<{
          s3 POP
          s0 s11 PUSH2
          8 PUSHPOW2
          DICTUGET
          NULLSWAPIFNOT
          40 THROWIFNOT
          s0 s2 XCHG
          9 PUSHPOW2
          LDSLICEX
          DROP
          s10 s1 s(-1) PU2XC
          CHKSIGNU
          41 THROWIFNOT
        }>ELSE<{
          s3 s1 s3 XCHG3
          DROP
        }>
        s0 s2 XCHG
        NOT
        s13 s13 s0 XCHG3
      }>
      DROP
      s6 POP
      s0 s13 PUSH2
      GEQ
      IF:<{
        s1 s3 XCHG
        3 BLKDROP
        s2 POP
        s3 s3 XCHG2
        SENDRAWMSG
        s0 s5 XCHG2
        8 PUSHPOW2
        DICTUDEL
        DROP
        s0 s5 XCHG
        DEC
      }>ELSE<{
        NEWC
        s1 s4 XCHG
        32 STU
        s1 s2 XCHG
        32 STU
        8 STU
        8 STU
        s2 s0 s11 XC2PU
        STUX
        s1 s3 XCHG
        STREF
        s0 s1 s6 XCHG3
        8 PUSHPOW2
        DICTUSETB
        s0 s5 XCHG
      }>
      s0 s5 XCHG
      s0 s4 XCHG
      s0 s3 XCHG
    }>
    DROP
    s0 s2 XCHG
    ENDS
    INC
    NEWC
    32 STU
    s1 s3 XCHG
    16 STU
    s1 s4 XCHG
    8 STU
    s1 s2 XCHG
    8 STU
    STDICT
    STDICT
    ENDC
    c4 POP
  }>
  seqno PROC:<{
    c4 PUSH
    CTOS
    32 PLDU
  }>
  pending_count PROC:<{
    c4 PUSH
    CTOS
    32 PUSHINT
    SDSKIPFIRST
    16 PLDU
  }>
  param_n PROC:<{
    c4 PUSH
    CTOS
    48 PUSHINT
    SDSKIPFIRST
    8 PLDU
  }>
  param_k PROC:<{
    c4 PUSH
    CTOS
    56 PUSHINT
    SDSKIPFIRST
    8 PLDU
  }>
  owners PROC:<{
    c4 PUSH
    CTOS
    32 LDU
    NIP
    16 LDU
    NIP
    8 LDU
    NIP
    8 LDU
    NIP
    LDDICT
    DROP
    PUSHNULL
    256 PUSHPOW2DEC
    UNTIL:<{
      s2 PUSH
      8 PUSHPOW2
      DICTUGETPREV
      NULLSWAPIFNOT
      NULLSWAPIFNOT
      DUP
      IF:<{
        s0 s2 XCHG
        8 PLDU
        s1 s(-1) PUXC
        PAIR
        s0 s3 XCHG2
        CONS
      }>ELSE<{
        2SWAP
        DROP
      }>
      SWAP
      NOT
      s1 s2 XCHG
    }>
    DROP
    NIP
  }>
  pending PROC:<{
    c4 PUSH
    CTOS
    32 LDU
    NIP
    16 LDU
    NIP
    8 LDU
    8 LDU
    NIP
    LDDICT
    NIP
    LDDICT
    DROP
    DUP
    ISNULL
    IFJMP:<{
      2DROP
      PUSHNULL
    }>
    PUSHNULL
    256 PUSHPOW2DEC
    UNTIL:<{
      s2 PUSH
      8 PUSHPOW2
      DICTUGETPREV
      NULLSWAPIFNOT
      NULLSWAPIFNOT
      DUP
      IF:<{
        s0 s2 XCHG
        32 LDU
        32 LDU
        8 LDU
        8 LDU
        s9 PUSH
        LDUX
        LDREF
        DROP
        s6 PUSH
        6 -ROLL
        7 TUPLE
        s0 s3 XCHG2
        CONS
      }>ELSE<{
        2SWAP
        DROP
      }>
      SWAP
      NOT
      s1 s2 XCHG
    }>
    s1 s3 XCHG
    3 BLKDROP
  }>
  pending_signed_by PROC:<{
    c4 PUSH
    CTOS
    32 LDU
    NIP
    16 LDU
    NIP
    8 LDU
    8 LDU
    NIP
    LDDICT
    LDDICT
    DROP
    s4 s4 XCHG2
    8 PUSHPOW2
    DICTUGET
    NULLSWAPIFNOT
    36 THROWIFNOT
    s3 PUSH
    ISNULL
    IFJMP:<{
      4 BLKDROP
      PUSHNULL
    }>
    PUSHNULL
    256 PUSHPOW2DEC
    s0 s2 XCHG
    8 LDU
    DROP
    POW2
    UNTIL:<{
      s2 s5 XCPU
      8 PUSHPOW2
      DICTUGETPREV
      NULLSWAPIFNOT
      NULLSWAPIFNOT
      DUP
      IF:<{
        s0 s2 XCHG
        32 LDU
        32 LDU
        8 LDU
        8 LDU
        s9 PUSH
        LDUX
        LDREF
        DROP
        s1 s9 PUSH2
        AND
        0 NEQINT
        s12 s(-1) PUXC
        EQUAL
        IF:<{
          s6 PUSH
          6 -ROLL
          7 TUPLE
          s0 s3 XCHG2
          CONS
        }>ELSE<{
          s6 s8 XCHG
          6 BLKDROP
        }>
      }>ELSE<{
        2SWAP
        DROP
      }>
      SWAP
      NOT
      s1 s3 s0 XCHG3
    }>
    s1 s5 XCHG
    5 BLKDROP
  }>
}END>c

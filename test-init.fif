#!/usr/bin/env fift -s
"multisig-utils.fif" include

{ ."<wallet> [<new-data-boc>] [-C <code-fif>]" cr
  ."Simulate creation of a multisig wallet locally."
} : usage()

1 3 check-arg-count()

."Loading init message from " $1 +"-init-query.boc" type cr cr

$1 +"-init-query.boc" file>B B>boc parse-external-message()
=: WalletMessage =: StateInit 2drop

StateInit untriple =: WalletLibs =: WalletData =: WalletCodeCell

def? $2 { @' $2 } { $1 +"-data-0" } cond =: FileBase

$#
dup 1- $() ="-C" {
  dup $() +".fif" include =: WalletCode
  2 -
} {
  WalletCodeCell =: WalletCode
} cond

WalletData <s csr. cr

WalletMessage <s recv_external WalletCode WalletData runvm()

=: NewWalletData
=: ExitCode

."Exit code: " ExitCode . cr
."Updated data: " cr NewWalletData <s csr. cr

."Saving updated data to " FileBase +".boc" type cr

NewWalletData 2 boc+>B FileBase +".boc" B>file
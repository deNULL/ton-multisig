#!/usr/bin/env fift -s
"multisig-utils.fif" include

{ ."<wallet> [<new-data-boc>] [-C <code-fif>]" cr
  ."Simulate creation of a multisig wallet locally."
} : usage()

// == Parsing command-line arguments

{
  "-C" "--code-file" 1 { +".fif" include =: WalletCode } option-long()

  1 { =: BaseFile } nth-argument()
  2 { =: NewDataFile } nth-argument()
  no-more-arguments()
} scan-args()
1 < { show-usage() } if // Checks that there's enough arguments

// == End of parsing command-line arguments

."Loading init message from " BaseFile +"-init-query.boc" type cr cr

BaseFile +"-init-query.boc" file>B B>boc parse-external-message()
=: WalletMessage =: StateInit 2drop

StateInit untriple =: WalletLibs =: WalletData =: WalletCodeCell

BaseFile +"-data-0" =:? NewDataFile
WalletCodeCell =:? WalletCode

WalletData <s csr. cr

WalletMessage <s recv_external WalletCode WalletData runvm()

=: NewWalletData
=: ExitCode

."Exit code: " ExitCode . cr
."Updated data: " cr NewWalletData <s csr. cr

."Saving updated data to " NewDataFile +".boc" type cr

NewWalletData 2 boc+>B NewDataFile +".boc" B>file
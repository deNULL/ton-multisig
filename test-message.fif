#!/usr/bin/env fift -s
"common-utils.fif" include

{
  ."<old-data-boc> <message-boc> [<new-data-boc>] [-C <code-fif>]" cr
  ."Simulate sending an external message to multisig wallet."
} : usage()

2 3 check-arg-count()

$1 +".boc" file>B B>boc =: OldWalletData
."Old data: " cr OldWalletData <s csr. cr
$2 +".boc" file>B B>boc 
<s ref@ =: WalletMessage
."Message: " cr WalletMessage <s csr. cr

$#
dup 1- $() ="-C" {
  dup $() +".fif" include =: WalletCode
  2 -
} {
  // Import the actual smart contract code
  "multisig-code-getters.fif" include =: WalletCode
} cond

WalletMessage <s WalletCode OldWalletData recv_external runvm()

=: NewWalletData
=: ExitCode

."Exit code: " ExitCode . cr
."Updated data: " cr NewWalletData <s csr. cr

def? $3 {
  NewWalletData 2 boc+>B 3 $() +".boc" B>file
} if
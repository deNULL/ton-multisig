#!/usr/bin/env fift -s
"common-utils.fif" include

{
  ."<old-data-boc> <message-boc> [<new-data-boc>] [-C <code-fif>]" cr
  ."Simulate sending an external message to multisig wallet."
} : usage()

// == Parsing command-line arguments

{
  "-C" "--code-file" 1 { +".fif" include =: WalletCode } option-long()

  1 { =: OldDataFile } nth-argument()
  2 { =: MessageFile } nth-argument()
  3 { =: NewDataFile } nth-argument()
  no-more-arguments()
} scan-args()
2 < { show-usage() } if // Checks that there's enough arguments

// == End of parsing command-line arguments

"code-getters.fif" include =:? WalletCode

OldDataFile +".boc" file>B B>boc =: OldWalletData
."Old data: " cr OldWalletData <s csr. cr
MessageFile +".boc" file>B B>boc 
<s ref@ =: WalletMessage
."Message: " cr WalletMessage <s csr. cr

WalletMessage <s recv_external WalletCode OldWalletData runvm()

=: NewWalletData
=: ExitCode

."Exit code: " ExitCode . cr
."Updated data: " cr NewWalletData <s csr. cr

def? NewDataFile {
  NewWalletData 2 boc+>B NewDataFile +".boc" B>file
} if
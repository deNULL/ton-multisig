// automatically generated from `smartcont/stdlib.fc` `my/multisig-code.fc` 
PROGRAM{
  DECLPROC unpack_request
  DECLPROC recv_internal
  DECLPROC recv_external
  DECLPROC unpack_signatures
  85143 DECLMETHOD seqno
  126687 DECLMETHOD pending_count
  107113 DECLMETHOD param_n
  127692 DECLMETHOD param_k
  84885 DECLMETHOD owners
  126129 DECLMETHOD pending
  75417 DECLMETHOD pending_signed_by
  unpack_request PROC:<{
    SWAP
    32 LDU
    32 LDU
    8 LDU
    8 LDU
    s0 s5 XCHG2
    LDUX
    LDREF
    DROP
    s4 s5 XCHG
    s3 s4 XCHG
    s2 s3 XCHG
  }>
  recv_internal PROC:<{
    DROP
  }>
  recv_external PROC:<{
    9 PUSHPOW2
    LDSLICEX
    DUP
    32 LDU
    32 LDU
    NOW
    s1 s2 XCHG
    LESS
    35 THROWIF
    256 LDU
    c4 PUSH
    CTOS
    32 LDU
    16 LDU
    8 LDU
    8 LDU
    s7 s4 XCPU
    EQUAL
    33 THROWIFNOT
    s0 s7 XCHG
    HASHSU
    s0 s8 s5 XC2PU
    CHKSIGNU
    34 THROWIFNOT
    s0 s4 XCHG
    LDDICT
    LDDICT
    ENDS
    s4 s1 XCPU
    8 PUSHPOW2
    DICTUGET
    NULLSWAPIFNOT
    NIP
    35 THROWIFNOT
    ACCEPT
    s3 PUSH
    ISNULL
    IF:<{
      s3 POP
      NEWDICT
    }>ELSE<{
      s0 s3 XCHG
    }>
    -1 PUSHINT
    UNTIL:<{
      OVER
      8 PUSHPOW2
      DICTUGETNEXT
      NULLSWAPIFNOT
      NULLSWAPIFNOT
      DUP
      IF:<{
        s0 s2 XCHG
        LDDICT
        NIP
        LDREF
        DROP
        CTOS
        32 LDU
        NIP
        32 LDU
        DROP
        NOW
        LESS
        IF:<{
          8 PUSHPOW2
          s1 s3 s3 PUXC2
          DICTUDELGET
          NULLSWAPIFNOT
          2DROP
        }>ELSE<{
          s0 s2 XCHG
        }>
      }>ELSE<{
        2SWAP
        DROP
      }>
      SWAP
      NOT
      s1 s2 XCHG
    }>
    DROP
    s0 s2 XCHG
    WHILE:<{
      DUP
      SREFS
    }>DO<{
      0 PUSHINT
      s0 s0 s0 PUSH3
      s0 s0 PUSH2
      NEWC
      ENDC
      s7 PUSH
      SBITS
      IF:<{
        s6 POP
        -1 PUSHINT
        s0 s7 XCHG
        256 LDU
      }>ELSE<{
        DROP
        s2 POP
        s2 POP
        s2 POP
        s0 s3 XCHG
        LDREF
        OVER
        HASHCU
        s0 s2 XCHG
        CTOS
        32 LDU
        32 LDU
        8 LDU
        LDREF
        DROP
        s7 s8 XCHG
        s0 s7 XCHG
        3 4 BLKSWAP
      }>
      LDDICT
      s6 PUSH
      NOW
      LESS
      36 THROWIF
      s2 s11 PUSH2
      8 PUSHPOW2
      DICTUGET
      NULLSWAPIFNOT
      IF:<{
        s4 POP
        s4 POP
        s4 POP
        s4 POP
        s4 POP
        s4 POP
        s4 POP
        s1 s9 XCPU
        unpack_request CALLDICT
      }>ELSE<{
        DROP
        s0 s9 XCHG
        37 THROWIFNOT
        s6 s9 PUSH2
        EQUAL
        38 THROWIFNOT
        s0 s8 XCHG
        s6 s7 XCHG2
        s1 s5 XCHG
        s1 s4 XCHG
        s3 s3 s0 XCHG3
      }>
      -1 PUSHINT
      UNTIL:<{
        s9 PUSH
        8 PUSHPOW2
        DICTUGETNEXT
        NULLSWAPIFNOT
        NULLSWAPIFNOT
        DUP
        IF:<{
          s1 s14 PUSH2
          8 PUSHPOW2
          DICTUGET
          NULLSWAPIFNOT
          39 THROWIFNOT
          s0 s3 XCHG
          9 PUSHPOW2
          LDSLICEX
          DROP
          s10 s2 s(-1) PU2XC
          CHKSIGNU
          40 THROWIFNOT
          s0 s2 XCHG
          8 LDU
          DROP
          POW2
          s4 s0 PUSH2
          AND
          IFNOT:<{
            s0 s5 XCHG
            INC
            s4 s5 XCHG2
            OR
          }>ELSE<{
            s1 s4 XCHG
            DROP
          }>
        }>ELSE<{
          s4 s2 XCHG2
          DROP
        }>
        SWAP
        NOT
        s1 s3 XCHG
      }>
      DROP
      s8 POP
      s1 s12 PUSH2
      GEQ
      IF:<{
        s2 s4 XCHG
        4 BLKDROP
        s1 s3 XCHG
        SENDRAWMSG
        s0 s3 XCHG
        8 PUSHPOW2
        DICTUDELGET
        NULLSWAPIFNOT
        2DROP
      }>ELSE<{
        NEWC
        s1 s5 XCHG
        32 STU
        s1 s3 XCHG
        32 STU
        8 STU
        8 STU
        s10 PUSH
        STUX
        s1 s3 XCHG
        STREF
        s0 s0 s4 XCHG3
        8 PUSHPOW2
        DICTUSETB
      }>
      s0 s2 XCHG
    }>
    ENDS
    INC
    NEWC
    32 STU
    s1 s3 XCHG
    16 STU
    s1 s4 XCHG
    8 STU
    s1 s2 XCHG
    8 STU
    s1 s2 XCHG
    STDICT
    STDICT
    ENDC
    c4 POP
  }>
  unpack_signatures PROC:<{
    PUSHNULL
    256 PUSHPOW2DEC
    UNTIL:<{
      s2 PUSH
      8 PUSHINT
      DICTUGETPREV
      NULLSWAPIFNOT
      NULLSWAPIFNOT
      s2 POP
      OVER
      IF:<{
        s0 s2 PUXC
        CONS
      }>ELSE<{
        s0 s2 XCHG
      }>
      SWAP
      NOT
      s1 s2 XCHG
    }>
    DROP
    NIP
  }>
  seqno PROC:<{
    c4 PUSH
    CTOS
    32 PLDU
  }>
  pending_count PROC:<{
    c4 PUSH
    CTOS
    32 PUSHINT
    SDSKIPFIRST
    16 PLDU
  }>
  param_n PROC:<{
    c4 PUSH
    CTOS
    48 PUSHINT
    SDSKIPFIRST
    8 PLDU
  }>
  param_k PROC:<{
    c4 PUSH
    CTOS
    56 PUSHINT
    SDSKIPFIRST
    8 PLDU
  }>
  owners PROC:<{
    c4 PUSH
    CTOS
    LDDICT
    DROP
    PUSHNULL
    256 PUSHPOW2DEC
    UNTIL:<{
      s2 PUSH
      8 PUSHPOW2
      DICTUGETPREV
      NULLSWAPIFNOT
      NULLSWAPIFNOT
      DUP
      IF:<{
        s0 s2 XCHG
        8 PLDU
        s1 s(-1) PUXC
        PAIR
        s0 s3 XCHG2
        CONS
      }>ELSE<{
        2SWAP
        DROP
      }>
      SWAP
      NOT
      s1 s2 XCHG
    }>
    DROP
    NIP
  }>
  pending PROC:<{
    c4 PUSH
    CTOS
    DUP
    48 PUSHINT
    SDSKIPFIRST
    8 PLDU
    SWAP
    LDDICT
    NIP
    LDDICT
    DROP
    DUP
    ISNULL
    IFJMP:<{
      2DROP
      PUSHNULL
    }>
    PUSHNULL
    256 PUSHPOW2DEC
    UNTIL:<{
      s2 PUSH
      8 PUSHPOW2
      DICTUGETPREV
      NULLSWAPIFNOT
      NULLSWAPIFNOT
      DUP
      IF:<{
        s2 s5 XCPU
        unpack_request CALLDICT
        DROP
        NIP
        s3 POP
        s3 PUSH
        s0 s3 XCHG
        4 TUPLE
        s0 s3 XCHG2
        CONS
      }>ELSE<{
        2SWAP
        DROP
      }>
      SWAP
      NOT
      s1 s2 XCHG
    }>
    s1 s3 XCHG
    3 BLKDROP
  }>
  pending_signed_by PROC:<{
    c4 PUSH
    CTOS
    DUP
    48 PUSHINT
    SDSKIPFIRST
    8 PLDU
    SWAP
    LDDICT
    s4 s4 XCHG2
    8 PUSHPOW2
    DICTUGET
    NULLSWAPIFNOT
    36 THROWIFNOT
    8 LDU
    DROP
    POW2
    s0 s3 XCHG
    LDDICT
    DROP
    DUP
    ISNULL
    IFJMP:<{
      4 BLKDROP
      PUSHNULL
    }>
    PUSHNULL
    256 PUSHPOW2DEC
    UNTIL:<{
      s2 PUSH
      8 PUSHPOW2
      DICTUGETPREV
      NULLSWAPIFNOT
      NULLSWAPIFNOT
      DUP
      IF:<{
        s2 s5 XCPU
        unpack_request CALLDICT
        DROP
        NIP
        s3 POP
        s2 s9 PUSH2
        AND
        0 NEQINT
        s9 s(-1) PUXC
        EQUAL
        IF:<{
          s3 PUSH
          s0 s3 XCHG
          4 TUPLE
          s0 s3 XCHG2
          CONS
        }>ELSE<{
          s3 s5 XCHG
          3 BLKDROP
        }>
      }>ELSE<{
        2SWAP
        DROP
      }>
      SWAP
      NOT
      s1 s2 XCHG
    }>
    s1 s5 XCHG
    5 BLKDROP
  }>
}END>c

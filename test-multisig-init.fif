#!/usr/bin/env fift -s
"multisig-utils.fif" include

{ ."<n> [<k> <filename-base>]" cr
  ."Simulate creation of a multisig wallet locally"
} : usage()

1 3 check-arg-count()

$1 (number) 1- abort"n must be an integer number" =: n
def? $2 { @' $2 (number) 1- abort"k must be an integer number" } { n } cond =: k
def? $3 { @' $3 } { "new-multisig-wallet" } cond =: FileBase

"multisig-code.fif" include =: WalletCode

n k build-initial-data() =: WalletData

0 -1 PrimaryPublicKey empty-message() PrimaryPrivateKey sign-message()
  WalletCode WalletData recv_external runvm()

=: NewWalletData
=: ExitCode

."Exit code: " ExitCode . cr
."Updated data: " cr NewWalletData <s csr. cr

NewWalletData 2 boc+>B "data-0.boc" B>file